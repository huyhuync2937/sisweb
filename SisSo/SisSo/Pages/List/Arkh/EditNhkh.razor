@inherits FrmListBaseComponent
@inject IStringLocalizer<ArkhComponent> Lat


<div style="width:600px;">
    <FormList Title="@Title" @bind-curActionTask="@curActionTask" OnSave="@SaveDM" OnCancel="@HideVoucher">
        <EditForm Model="@CurDmnh" onkeydown="ModifyEnterKeyPressAsTab(event);" class="row m-1 me-2 rounded-1 border border-light shadow">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="row">
                <div class="row pb-2">
                    <label class="col-4" for="Loai_nh">@Lap["Group type"] (*): </label>
                <DxSpinEdit CssClass="col" Id="Loai_nh" @bind-Value="@CurDmnh.Loai_nh" MinValue="1" MaxValue="4" Enabled="@AllowEditLoai" />
                </div>

                <div class="row pb-2">
                    <label class="col-4" for="Ma_nh">@Lap["Group ID"] (*): </label>
                    <DxTextBox CssClass="col" Id="Ma_nh" @bind-Text="@CurDmnh.Ma_nh" InputCssClass="uppercase font-bold" maxlength="@tblLength["ma_nh"]" Enabled="@AllowEditMode" />
                </div>

                <div class="row pb-2">
                    <label class="col-4" for="Ten_nh">@Lap["Group name"] (*): </label>
                    <DxTextBox CssClass="col" Id="Ten_nh" @bind-Text="@CurDmnh.Ten_nh" maxlength="@tblLength["ten_nh"]" Enabled="@AllowEditMode" />
                </div>

                <div class="row pb-2">
                    <label class="col-4" for="Ten_nh2">@Lap["Group name 2"] : </label>
                    <DxTextBox CssClass="col" Id="Ten_nh2" @bind-Text="@CurDmnh.Ten_nh2" maxlength="@tblLength["ten_nh2"]" Enabled="@AllowEditMode" />
                </div>
         
                <div class="row">
                <label class="col-4" for="Status">@Lap["Status"] (*): </label>
                <DxComboBox Id="Status" Enabled="@AllowEditMode"
                                CssClass="col"
                                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                Data="LSStatus"
                                TextFieldName="Ten"
                                ValueFieldName="Ma"
                            @bind-Value="@CurDmnh.Status" />
                </div>
                <hr class="col-12" />
            </div>
        </EditForm>
    </FormList>    
</div>
@code {
    public Dmnh CurDmnh { get; set; }
    private bool AllowEditLoai;
    private string menu_id = "ws.dm.02";

   protected override void OnInitialized()
    {        
        PageLoad();
        CurDmnh = new Dmnh();

        if (String.IsNullOrEmpty(Menu_id))
            Menu_id = menu_id;

        base.OnInitialized();
    }
    protected override async Task OnInitializedAsync()
    {          
        myStateMN.OnLangguaChanged += OnLangguachange;

        if (curActionTask == ActionTask.None)
            curActionTask = myStateMN.GetCurrentActionTask();

        curUser = myStateMN.GetCurUser();       

        switch (curActionTask)
        {
            case ActionTask.View:
                {
                    if (!string.IsNullOrEmpty(Ma_ma))
                        ViewDM(Ma_ma);
                    myStateMN.SetToolBar(new MyToolbar("save", false));
                    break;
                }
            case ActionTask.Edit:
                {
                    if (!string.IsNullOrEmpty(Ma_ma))
                        EditDM(Ma_ma);
                    break;
                }
            case ActionTask.New:
                {
                    CreateNewDM();
                    break;
                }
            default:
                {
                    if (!string.IsNullOrEmpty(Ma_ma))
                        ViewDM(Ma_ma);
                    break;
                }
        }        
    }
    void ViewDM(string SqlTableKeyValue)
    {
        CurDmnh = new Dmnh();
        AllowEditMode = false;
        AllowEditLoai = false;
        LoadData(SqlTableKeyValue);
    }
    void EditDM(string SqlTableKeyValue)
    {
        CurDmnh = new Dmnh();
        AllowEditMode = true;
        AllowEditLoai = false;
        SqlTableKeyValueOld = SqlTableKeyValue;
        LoadData(SqlTableKeyValue);
    }
    async Task SaveDM()
    {
        CurDmnh.Ma_nh = CurDmnh.Ma_nh.ToUpper().Trim();
        SqlTableKeyValue = CurDmnh.Ma_nh;
        if (!CheckValidCode())
            return;

        if (!CheckValid())
            return;
        
        if (curActionTask == ActionTask.New)
        {
            CurDmnh.Date = DateTime.Now.Date;
            CurDmnh.Date0 = DateTime.Now.Date;
            CurDmnh.Time = DateTime.Now.ToString("HH:MM:ss");
            CurDmnh.Time0 = DateTime.Now.ToString("HH:MM:ss");
            if (curUser != null)
            {
                CurDmnh.User_id = curUser.User_id;
                CurDmnh.User_id0 = curUser.User_id;
                CurDmnh.User_name = curUser.User_name;
                CurDmnh.User_name0 = curUser.User_name;
            }
            await myDb.InsertOneRow<Dmnh>(CurDmnh, sqlTableName);
            myStateMN.SetNewThongbao(String.Format(Lap["Successfully added new : {0}"], SqlTableKeyValue));
        }
        else if (curActionTask == ActionTask.Edit)
        {
            CurDmnh.Date = DateTime.Now.Date;
            CurDmnh.Time = DateTime.Now.ToString("HH:MM:ss");
            if (curUser != null)
            {
                CurDmnh.User_id = curUser.User_id;
                CurDmnh.User_name = curUser.User_name;
            }
            await myDb.UpdateOneRow<Dmnh>(CurDmnh, sqlTableName, SqlTableKey, SqlTableKeyValueOld,true);
            myStateMN.SetNewThongbao(String.Format(Lap["Edit successfully : {0}"], SqlTableKeyValue));            
        }
        // Đóng Form nhập
        if (DxWindowmodel != null)
        {
            myModal.CloseModal(DxWindowmodel);
        }

        if (ShowAdd == true)
        {
            OnClose.InvokeAsync();
        }
        else
            myNavi.NavigateTo("/" + ParentPage);
    }
    bool CheckValid()
    {
        if (string.IsNullOrEmpty(CurDmnh.Ma_nh))
        {
            myStateMN.SetNewThongbao(Lat["No customer code entered"]);
            StateHasChanged();
            return false;
        }
        if (string.IsNullOrEmpty(CurDmnh.Ten_nh))
        {
            myStateMN.SetNewThongbao(Lat["No customer name entered"]);
            StateHasChanged();
            return false;
        }       
        return true;

    }
    async void LoadData(string SqlTableKeyValue)
    {
        string sql = "Select * from " + sqlTableName + " where " + SqlTableKey + " = '" + SqlTableKeyValue + "'";
        DataSet DsTrans = await myDb.LoadDataset(sql);
        if (DsTrans != null && DsTrans.Tables[0].Rows.Count > 0)
        {
            List<Dmnh> lsdetai = myDb.ConvertDataTable<Dmnh>(DsTrans.Tables[0]);
            if (lsdetai != null && lsdetai.Count > 0)
                CurDmnh = lsdetai[0];
        }
        StateHasChanged();
    }    
    async void CreateNewDM()
    {
        CurDmnh = new Dmnh();
        CurDmnh.Status = "1";
        CurDmnh.Loai_nh = 1;
        CurDmnh.Ma_nh = GetNewSttDM();
        AllowEditMode = true;
        AllowEditLoai = true;

        if (!String.IsNullOrEmpty(Ma_ma))
        {
            string sql = "Select loai_nh,ten_nh,ten_nh2 from " + sqlTableName + " where " + SqlTableKey + " = '" + Ma_ma + "'";
            DataSet DsTrans = await myDb.LoadDataset(sql);
            if (DsTrans != null && DsTrans.Tables[0].Rows.Count > 0)
            {
                if (DsTrans.Tables[0].Rows[0]["loai_nh"] == null)
                    DsTrans.Tables[0].Rows[0]["loai_nh"] = (object)1;

                CurDmnh.Loai_nh = Convert.ToInt32(DsTrans.Tables[0].Rows[0]["loai_nh"]);
                CurDmnh.Ten_nh = DsTrans.Tables[0].Rows[0]["ten_nh"].ToString();
                CurDmnh.Ten_nh2 = DsTrans.Tables[0].Rows[0]["ten_nh2"].ToString();
            }
        }
        StateHasChanged();
    }
    async Task PageLoad1()
    {
        curCommand = await myCommand.GetSubMenuBymenuId(Menu_id);
        if (curCommand != null)
        {
            ParentPage = curCommand.Mobile_page.Trim() + @"/" + curCommand.Menu_id;
            string sql = "select * from dmdm where ma_dm = '" + curCommand.Store_proc + "'";
            DataSet ds = await myDb.LoadDataset(sql);
            List<Dmdm> lsdm = myDb.ConvertDataTable<Dmdm>(ds.Tables[0]);
            if (lsdm != null && lsdm.Count > 0)
            {
                CurDmdm = lsdm[0];
                if (CurDmdm != null)
                {
                    sqlTableName = CurDmdm.Table_name.Trim();
                    SqlTableKey = CurDmdm.Key.Trim().Split(";").LastOrDefault();
                    if (!string.IsNullOrEmpty(CurDmdm.Transform))
                        Transform = CurDmdm.Transform;
                }
            }
        }
    }   
}