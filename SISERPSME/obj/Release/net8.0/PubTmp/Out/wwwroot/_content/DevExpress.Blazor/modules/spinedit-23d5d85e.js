import{_ as e}from"./tslib.es6-d65164b3.js";import{d as t}from"./dom-554d0cc7.js";import{k as o}from"./key-ffa272aa.js";import{E as n}from"./eventhelper-8bcec49f.js";import{C as s}from"./custom-events-helper-e7f279d3.js";import{s as i}from"./constants-da6cacac.js";import{n as r}from"./nameof-factory-64d95f5b.js";import{DxMaskedInputEditor as a}from"./masked-input-441631c1.js";import{C as l}from"./css-classes-c63af734.js";import{n as d}from"./property-4ec0b52d.js";import"./_commonjsHelpers-41cdd1e7.js";import"./common-48ec40e2.js";import"./browser-3fc721b7.js";import"./text-editor-9fb6fa4a.js";import"./single-slot-element-base-6c879161.js";import"./data-qa-utils-8be7c726.js";import"./const-90026e45.js";import"./dx-ui-element-38985cf5.js";import"./lit-element-base-be4d2d51.js";import"./dx-license-7b9121f4.js";import"./lit-element-462e7ad3.js";import"./logicaltreehelper-39bf56ef.js";import"./layouthelper-b10d5065.js";import"./point-e4ec110e.js";import"./constants-7c047c0d.js";import"./devices-17b9ba08.js";import"./focus-utils-d076e44c.js";import"./touch-6a322081.js";import"./disposable-d2c2d283.js";import"./input-18241015.js";import"./keyboard-navigation-strategy-5d0ea026.js";import"./focushelper-3e91fef2.js";import"./dom-utils-d057dcaa.js";import"./custom-element-267f9a21.js";class p extends CustomEvent{constructor(e,t){super(p.eventName,{detail:new m(e,t),bubbles:!0,composed:!0,cancelable:!0})}}p.eventName=i+".incrementValue";class m{constructor(e,t){this.Increment=e,this.PreviousValue=t}}var u,c;s.register(p.eventName,(e=>e.detail)),function(e){e.allowMouseWheel="allow-mouse-wheel",e.needExponentialView="need-exponential-view",e.decimalSeparator="decimal-separator"}(c||(c={}));const h=r();class b{}u=b,b.Prefix=l.Prefix+"-spin",b.BtnsContainer=u.Prefix+"-btns",b.IncBtn=u.Prefix+"-btn-inc",b.DecBtn=u.Prefix+"-btn-dec";class f extends a{constructor(){super(...arguments),this.regex=/^-?(\d)*$/,this.pointerDownTimer={id:-1,button:null},this.buttonObserver=new MutationObserver(this.buttonRemovedHandler.bind(this)),this.boundButtonOnPointerUpHandler=this.onButtonPointerUp.bind(this),this.allowMouseWheel=!1,this.needExponentialView=!1}get pointerDownTimerId(){return this.pointerDownTimer.id}get shouldProcessWheel(){return this.allowMouseWheel}disconnectedCallback(){this.buttonObserver.disconnect(),this.stopPointerLongTap(),super.disconnectedCallback()}connectedOrContentChanged(){super.connectedOrContentChanged(),this.buttonObserver.observe(this,{childList:!0})}onTextInput(e){if(this.isMaskDefined)return;if(!this.inputElement||!n.containsInComposedPath(e,(e=>e===this.inputElement)))return;let t=this.fieldElementValue.trim();this.decimalSeparator&&(t=t.replace(/[.|,]/g,this.decimalSeparator)),this.regex.test(t)||(t=t.replace(/[^0-9]/g,"")),t!==this.fieldElementValue&&(this.fieldElementValue=t),super.onTextInput(e)}processKeyDown(e){const t=this.getFieldElement();return!!n.containsInComposedPath(e,(e=>e===t))&&(this.isNavigationKey(e)?(n.markHandled(e),this.incrementValue(e.keyCode===o.KeyCode.Up),!0):!!super.processKeyDown(e))}processWheel(e){this.incrementValue(e.deltaY<0)}processPointerDown(e){const o=this.getButton(e);if(o&&this.inputElement){e.preventDefault(),this.useAdaptiveLayout||t.DomUtils.setFocus(this.inputElement);const n=t.DomUtils.hasClassName(o,b.IncBtn);this.incrementValue(n),this.pointerDownTimer={id:window.setTimeout(this.startPointerLongTap.bind(this),1e3,n),button:o},o.addEventListener("pointerup",this.boundButtonOnPointerUpHandler),o.addEventListener("pointerout",this.boundButtonOnPointerUpHandler)}return super.processPointerDown(e)}getButton(e){const t=e.composedPath();for(const e in t){const o=t[e];if(o&&this.hasSpinBtnClass(o))return o}return null}hasSpinBtnClass(e){return t.DomUtils.hasClassName(e,b.IncBtn)||t.DomUtils.hasClassName(e,b.DecBtn)}startPointerLongTap(e,t){this.pointerDownTimer={id:window.setInterval(this.incrementValue.bind(this),50,e),button:t}}stopPointerLongTap(){-1!==this.pointerDownTimer.id&&(clearTimeout(this.pointerDownTimer.id),this.pointerDownTimer={id:-1,button:null},this.raiseApplyValue())}onButtonPointerUp(e){let o=e.target;this.hasSpinBtnClass(o)||(o=t.DomUtils.getParentByTagName(o,"button")),this.stopPointerLongTap(),o.removeEventListener("pointerup",this.boundButtonOnPointerUpHandler),o.removeEventListener("pointerout",this.boundButtonOnPointerUpHandler)}buttonRemovedHandler(e,o){if(-1===this.pointerDownTimer.id)return;e.some((e=>Array.from(e.removedNodes).some((e=>{var o,n;return t.DomUtils.isElementNode(e)&&e.classList.contains(b.BtnsContainer)&&((null===(o=this.pointerDownTimer.button)||void 0===o?void 0:o.isEqualNode(t.DomUtils.getChildNodesByClassName(e,b.IncBtn)[0]))||(null===(n=this.pointerDownTimer.button)||void 0===n?void 0:n.isEqualNode(t.DomUtils.getChildNodesByClassName(e,b.DecBtn)[0])))}))))&&this.stopPointerLongTap()}incrementValue(e){this.dispatchEvent(new p(e,this.fieldElementValue))}isNavigationKey(e){return e.keyCode===o.KeyCode.Up||e.keyCode===o.KeyCode.Down}updated(e){super.updated(e),(e.has(h("decimalSeparator"))||e.has(h("needExponentialView")))&&this.applyRegex()}applyRegex(){this.decimalSeparator&&(this.regex=this.needExponentialView?/^-?(\d+|[,.]\d+|\d+[,.]\d+|\d+[,.]|[,.])?([eE]?[+-]?(\d)*)?$/:/^-?(\d+|[,.]\d+|\d+[,.]\d+|\d+[,.]|[,.])?$/)}shouldProcessKeyUp(e){switch(e.key){case"ArrowUp":case"ArrowDown":return this.isMaskDefined}return super.shouldProcessKeyUp(e)}}e([d({type:Boolean,attribute:c.allowMouseWheel})],f.prototype,"allowMouseWheel",void 0),e([d({type:Boolean,attribute:c.needExponentialView})],f.prototype,"needExponentialView",void 0),e([d({type:String,attribute:c.decimalSeparator})],f.prototype,"decimalSeparator",void 0),customElements.define(i,f);const w={loadModule:function(){}};export{f as DxSpinEdit,b as SpinEditCssClasses,w as default};
