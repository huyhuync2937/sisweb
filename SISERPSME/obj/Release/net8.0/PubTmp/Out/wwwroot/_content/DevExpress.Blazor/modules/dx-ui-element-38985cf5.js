import{L as e}from"./lit-element-base-be4d2d51.js";import{i,L as t}from"./logicaltreehelper-39bf56ef.js";class l extends e{constructor(){super(),this._logicalParent=null,this._logicalChildren=new Array}get hasLogicalParent(){return!!this.logicalParent}get logicalParent(){return this._logicalParent}set logicalParent(e){this._logicalParent=e}get logicalChildren(){return this._logicalChildren}addLogicalChild(e){if(e.logicalParent)throw new Error("Child element already added.");this._logicalChildren.push(e),e.logicalParent=this}removeLogicalChild(e){e.logicalParent=null;const i=this._logicalChildren.indexOf(e);i>-1&&this._logicalChildren.splice(i,1)}async processCapturedKeyDownAsync(e,t){t.handled||this.logicalParent&&i(this.logicalParent)&&await this.logicalParent.processCapturedKeyDownAsync(e,t)}async processCapturedPointerAsync(e,l){if(l.handled)return;if(this.isPointedCaptured(e))return;const a=t.findParent(this,(e=>i(e)));a&&i(a)&&await a.processCapturedPointerAsync(e,l)}isPointedCaptured(e){return null!=t.findParent(this,(e=>i(e)))}}export{l as D};
